/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_sonicbase_index_NativePartitionedTree */

#ifndef _Included_com_sonicbase_index_NativePartitionedTree
#define _Included_com_sonicbase_index_NativePartitionedTree
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_sonicbase_index_NativePartitionedTree
 * Method:    initIndex
 * Signature: ([I)J
 */
JNIEXPORT jlong JNICALL Java_com_sonicbase_index_NativePartitionedTree_initIndex
  (JNIEnv *, jobject, jintArray);

/*
 * Class:     com_sonicbase_index_NativePartitionedTree
 * Method:    put
 * Signature: (J[Ljava/lang/Object;J)J
 */
JNIEXPORT jlong JNICALL Java_com_sonicbase_index_NativePartitionedTree_put
  (JNIEnv *, jobject, jlong, jobjectArray, jlong);

/*
 * Class:     com_sonicbase_index_NativePartitionedTree
 * Method:    get
 * Signature: (J[Ljava/lang/Object;)J
 */
JNIEXPORT jlong JNICALL Java_com_sonicbase_index_NativePartitionedTree_get
  (JNIEnv *, jobject, jlong, jobjectArray);

/*
 * Class:     com_sonicbase_index_NativePartitionedTree
 * Method:    remove
 * Signature: (J[Ljava/lang/Object;)J
 */
JNIEXPORT jlong JNICALL Java_com_sonicbase_index_NativePartitionedTree_remove
  (JNIEnv *, jobject, jlong, jobjectArray);

/*
 * Class:     com_sonicbase_index_NativePartitionedTree
 * Method:    clear
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_sonicbase_index_NativePartitionedTree_clear
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_sonicbase_index_NativePartitionedTree
 * Method:    tailBlockArray
 * Signature: (J[Ljava/lang/Object;IZ[[Ljava/lang/Object;[J)I
 */
JNIEXPORT jint JNICALL Java_com_sonicbase_index_NativePartitionedTree_tailBlockArray
  (JNIEnv *, jobject, jlong, jobjectArray, jint, jboolean, jobjectArray, jlongArray);

/*
 * Class:     com_sonicbase_index_NativePartitionedTree
 * Method:    headBlockArray
 * Signature: (J[Ljava/lang/Object;IZ[[Ljava/lang/Object;[J)I
 */
JNIEXPORT jint JNICALL Java_com_sonicbase_index_NativePartitionedTree_headBlockArray
  (JNIEnv *, jobject, jlong, jobjectArray, jint, jboolean, jobjectArray, jlongArray);

/*
 * Class:     com_sonicbase_index_NativePartitionedTree
 * Method:    higherEntry
 * Signature: (J[Ljava/lang/Object;[[Ljava/lang/Object;[J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_sonicbase_index_NativePartitionedTree_higherEntry
  (JNIEnv *, jobject, jlong, jobjectArray, jobjectArray, jlongArray);

/*
 * Class:     com_sonicbase_index_NativePartitionedTree
 * Method:    lowerEntry
 * Signature: (J[Ljava/lang/Object;[[Ljava/lang/Object;[J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_sonicbase_index_NativePartitionedTree_lowerEntry
  (JNIEnv *, jobject, jlong, jobjectArray, jobjectArray, jlongArray);

/*
 * Class:     com_sonicbase_index_NativePartitionedTree
 * Method:    floorEntry
 * Signature: (J[Ljava/lang/Object;[[Ljava/lang/Object;[J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_sonicbase_index_NativePartitionedTree_floorEntry
  (JNIEnv *, jobject, jlong, jobjectArray, jobjectArray, jlongArray);

/*
 * Class:     com_sonicbase_index_NativePartitionedTree
 * Method:    ceilingEntry
 * Signature: (J[Ljava/lang/Object;[[Ljava/lang/Object;[J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_sonicbase_index_NativePartitionedTree_ceilingEntry
  (JNIEnv *, jobject, jlong, jobjectArray, jobjectArray, jlongArray);

/*
 * Class:     com_sonicbase_index_NativePartitionedTree
 * Method:    lastEntry2
 * Signature: (J[[Ljava/lang/Object;[J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_sonicbase_index_NativePartitionedTree_lastEntry2
  (JNIEnv *, jobject, jlong, jobjectArray, jlongArray);

/*
 * Class:     com_sonicbase_index_NativePartitionedTree
 * Method:    firstEntry2
 * Signature: (J[[Ljava/lang/Object;[J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_sonicbase_index_NativePartitionedTree_firstEntry2
  (JNIEnv *, jobject, jlong, jobjectArray, jlongArray);

/*
 * Class:     com_sonicbase_index_NativePartitionedTree
 * Method:    delete
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_sonicbase_index_NativePartitionedTree_delete
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_sonicbase_index_NativePartitionedTree
 * Method:    sortKeys
 * Signature: (J[[Ljava/lang/Object;Z)V
 */
JNIEXPORT void JNICALL Java_com_sonicbase_index_NativePartitionedTree_sortKeys
  (JNIEnv *, jobject, jlong, jobjectArray, jboolean);

#ifdef __cplusplus
}
#endif
#endif
