/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_sonicbase_index_NativePartitionedSkipListMap */

#ifndef _Included_com_sonicbase_index_NativePartitionedSkipListMap
#define _Included_com_sonicbase_index_NativePartitionedSkipListMap
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_sonicbase_index_NativePartitionedSkipListMap
 * Method:    initIndexSkipListMap
 * Signature: ([I)J
 */
JNIEXPORT jlong JNICALL Java_com_sonicbase_index_NativePartitionedSkipListMap_initIndexSkipListMap
  (JNIEnv *, jobject, jintArray);

/*
 * Class:     com_sonicbase_index_NativePartitionedSkipListMap
 * Method:    put
 * Signature: (J[Ljava/lang/Object;J)J
 */
JNIEXPORT jlong JNICALL Java_com_sonicbase_index_NativePartitionedSkipListMap_put__J_3Ljava_lang_Object_2J
  (JNIEnv *, jobject, jlong, jobjectArray, jlong);

/*
 * Class:     com_sonicbase_index_NativePartitionedSkipListMap
 * Method:    put
 * Signature: (J[[Ljava/lang/Object;[J[J)V
 */
JNIEXPORT void JNICALL Java_com_sonicbase_index_NativePartitionedSkipListMap_put__J_3_3Ljava_lang_Object_2_3J_3J
  (JNIEnv *, jobject, jlong, jobjectArray, jlongArray, jlongArray);

/*
 * Class:     com_sonicbase_index_NativePartitionedSkipListMap
 * Method:    get
 * Signature: (J[Ljava/lang/Object;)J
 */
JNIEXPORT jlong JNICALL Java_com_sonicbase_index_NativePartitionedSkipListMap_get
  (JNIEnv *, jobject, jlong, jobjectArray);

/*
 * Class:     com_sonicbase_index_NativePartitionedSkipListMap
 * Method:    remove
 * Signature: (J[Ljava/lang/Object;)J
 */
JNIEXPORT jlong JNICALL Java_com_sonicbase_index_NativePartitionedSkipListMap_remove
  (JNIEnv *, jobject, jlong, jobjectArray);

/*
 * Class:     com_sonicbase_index_NativePartitionedSkipListMap
 * Method:    clear
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_sonicbase_index_NativePartitionedSkipListMap_clear
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_sonicbase_index_NativePartitionedSkipListMap
 * Method:    getResultsBytes
 * Signature: (J[Ljava/lang/Object;IZ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_sonicbase_index_NativePartitionedSkipListMap_getResultsBytes
  (JNIEnv *, jobject, jlong, jobjectArray, jint, jboolean);

/*
 * Class:     com_sonicbase_index_NativePartitionedSkipListMap
 * Method:    getResultsObjects
 * Signature: (J[Ljava/lang/Object;IZ[[Ljava/lang/Object;[J)I
 */
JNIEXPORT jint JNICALL Java_com_sonicbase_index_NativePartitionedSkipListMap_getResultsObjects
  (JNIEnv *, jobject, jlong, jobjectArray, jint, jboolean, jobjectArray, jlongArray);

/*
 * Class:     com_sonicbase_index_NativePartitionedSkipListMap
 * Method:    tailBlockArray
 * Signature: (J[Ljava/lang/Object;IZ[BI)Z
 */
JNIEXPORT jboolean JNICALL Java_com_sonicbase_index_NativePartitionedSkipListMap_tailBlockArray
  (JNIEnv *, jobject, jlong, jobjectArray, jint, jboolean, jbyteArray, jint);

/*
 * Class:     com_sonicbase_index_NativePartitionedSkipListMap
 * Method:    headBlockArray
 * Signature: (J[Ljava/lang/Object;IZ[BI)Z
 */
JNIEXPORT jboolean JNICALL Java_com_sonicbase_index_NativePartitionedSkipListMap_headBlockArray
  (JNIEnv *, jobject, jlong, jobjectArray, jint, jboolean, jbyteArray, jint);

/*
 * Class:     com_sonicbase_index_NativePartitionedSkipListMap
 * Method:    higherEntry
 * Signature: (J[Ljava/lang/Object;[[Ljava/lang/Object;[J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_sonicbase_index_NativePartitionedSkipListMap_higherEntry
  (JNIEnv *, jobject, jlong, jobjectArray, jobjectArray, jlongArray);

/*
 * Class:     com_sonicbase_index_NativePartitionedSkipListMap
 * Method:    lowerEntry
 * Signature: (J[Ljava/lang/Object;[[Ljava/lang/Object;[J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_sonicbase_index_NativePartitionedSkipListMap_lowerEntry
  (JNIEnv *, jobject, jlong, jobjectArray, jobjectArray, jlongArray);

/*
 * Class:     com_sonicbase_index_NativePartitionedSkipListMap
 * Method:    floorEntry
 * Signature: (J[Ljava/lang/Object;[[Ljava/lang/Object;[J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_sonicbase_index_NativePartitionedSkipListMap_floorEntry
  (JNIEnv *, jobject, jlong, jobjectArray, jobjectArray, jlongArray);

/*
 * Class:     com_sonicbase_index_NativePartitionedSkipListMap
 * Method:    ceilingEntry
 * Signature: (J[Ljava/lang/Object;[[Ljava/lang/Object;[J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_sonicbase_index_NativePartitionedSkipListMap_ceilingEntry
  (JNIEnv *, jobject, jlong, jobjectArray, jobjectArray, jlongArray);

/*
 * Class:     com_sonicbase_index_NativePartitionedSkipListMap
 * Method:    lastEntry2
 * Signature: (J[[Ljava/lang/Object;[J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_sonicbase_index_NativePartitionedSkipListMap_lastEntry2
  (JNIEnv *, jobject, jlong, jobjectArray, jlongArray);

/*
 * Class:     com_sonicbase_index_NativePartitionedSkipListMap
 * Method:    firstEntry2
 * Signature: (J[[Ljava/lang/Object;[J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_sonicbase_index_NativePartitionedSkipListMap_firstEntry2
  (JNIEnv *, jobject, jlong, jobjectArray, jlongArray);

/*
 * Class:     com_sonicbase_index_NativePartitionedSkipListMap
 * Method:    delete
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_sonicbase_index_NativePartitionedSkipListMap_delete
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_sonicbase_index_NativePartitionedSkipListMap
 * Method:    sortKeys
 * Signature: (J[[Ljava/lang/Object;Z)V
 */
JNIEXPORT void JNICALL Java_com_sonicbase_index_NativePartitionedSkipListMap_sortKeys
  (JNIEnv *, jobject, jlong, jobjectArray, jboolean);

#ifdef __cplusplus
}
#endif
#endif
